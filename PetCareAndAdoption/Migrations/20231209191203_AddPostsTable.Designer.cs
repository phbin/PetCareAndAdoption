// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PetCareAndAdoption.Data;

#nullable disable

namespace PetCareAndAdoption.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20231209191203_AddPostsTable")]
    partial class AddPostsTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("PetCareAndAdoption.Data.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("PetCareAndAdoption.Data.Breeds", b =>
                {
                    b.Property<string>("breedID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("breedName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("speciesID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("breedID");

                    b.HasIndex("speciesID");

                    b.ToTable("Breeds");

                    b.HasData(
                        new
                        {
                            breedID = "2653950e-d036-4977-aeaf-095bdaef100b",
                            breedName = "Bird",
                            speciesID = "956c7355-889a-4523-bae6-81d742483817"
                        },
                        new
                        {
                            breedID = "f78895db-e4c2-4aa8-be82-5ab7c4873bb0",
                            breedName = "Hamster",
                            speciesID = "956c7355-889a-4523-bae6-81d742483817"
                        },
                        new
                        {
                            breedID = "fa4d360b-5715-4803-a140-c50c93c033c4",
                            breedName = "Chicken",
                            speciesID = "956c7355-889a-4523-bae6-81d742483817"
                        },
                        new
                        {
                            breedID = "b424a480-7088-4035-9f9e-fdbd94929ff6",
                            breedName = "Hedgehog",
                            speciesID = "956c7355-889a-4523-bae6-81d742483817"
                        },
                        new
                        {
                            breedID = "c7c0e530-300f-45e7-b210-d3f57c4e94a8",
                            breedName = "Rabbit",
                            speciesID = "956c7355-889a-4523-bae6-81d742483817"
                        },
                        new
                        {
                            breedID = "d6a329ff-63de-4147-ab6a-7a9036d27e4c",
                            breedName = "Turtle",
                            speciesID = "956c7355-889a-4523-bae6-81d742483817"
                        },
                        new
                        {
                            breedID = "1eb5cb1e-53f8-43e9-a24c-a19e3d8d54dc",
                            breedName = "Tortoise",
                            speciesID = "956c7355-889a-4523-bae6-81d742483817"
                        },
                        new
                        {
                            breedID = "4aad0fc9-2aac-423f-b3e8-81859b4e47b9",
                            breedName = "Snake",
                            speciesID = "956c7355-889a-4523-bae6-81d742483817"
                        },
                        new
                        {
                            breedID = "d6eed35c-4a01-488d-a470-136783e19079",
                            breedName = "Fish",
                            speciesID = "956c7355-889a-4523-bae6-81d742483817"
                        },
                        new
                        {
                            breedID = "3fba3922-daad-4f88-9166-5f42b4dd1ccf",
                            breedName = "Monkey",
                            speciesID = "956c7355-889a-4523-bae6-81d742483817"
                        },
                        new
                        {
                            breedID = "b9810062-c25d-4382-8e73-89481d11d2e3",
                            breedName = "Others",
                            speciesID = "956c7355-889a-4523-bae6-81d742483817"
                        },
                        new
                        {
                            breedID = "bc1512f7-e6e8-4cd9-a04c-4b0358b26db5",
                            breedName = "Bulldog",
                            speciesID = "b1e425e4-7322-4870-9305-f4f6ca6f07a7"
                        },
                        new
                        {
                            breedID = "e7c95785-0b47-4c50-a8b3-0aa5ab674093",
                            breedName = "Labrador",
                            speciesID = "b1e425e4-7322-4870-9305-f4f6ca6f07a7"
                        },
                        new
                        {
                            breedID = "e9b65fe6-9641-4c99-8efa-ef9bbb85b80c",
                            breedName = "Golden Retriever",
                            speciesID = "b1e425e4-7322-4870-9305-f4f6ca6f07a7"
                        },
                        new
                        {
                            breedID = "414aeab1-e65a-4bbf-991c-3b593d4dbd0c",
                            breedName = "German Shepherd",
                            speciesID = "b1e425e4-7322-4870-9305-f4f6ca6f07a7"
                        },
                        new
                        {
                            breedID = "acfca78c-1e49-40e5-b291-abcf38420e8f",
                            breedName = "Beagle",
                            speciesID = "b1e425e4-7322-4870-9305-f4f6ca6f07a7"
                        },
                        new
                        {
                            breedID = "46553f51-9f7b-4fd8-924a-4b129e418a97",
                            breedName = "Poodle",
                            speciesID = "b1e425e4-7322-4870-9305-f4f6ca6f07a7"
                        },
                        new
                        {
                            breedID = "e3c64bc0-a9eb-44d9-8b5d-813221f8680a",
                            breedName = "Boxer",
                            speciesID = "b1e425e4-7322-4870-9305-f4f6ca6f07a7"
                        },
                        new
                        {
                            breedID = "3bd3330e-ca45-4423-8889-7cd603c38830",
                            breedName = "Dachshund",
                            speciesID = "b1e425e4-7322-4870-9305-f4f6ca6f07a7"
                        },
                        new
                        {
                            breedID = "ff6cc2fe-3a9c-4501-a4de-2387bfc2112b",
                            breedName = "Shih Tzu",
                            speciesID = "b1e425e4-7322-4870-9305-f4f6ca6f07a7"
                        },
                        new
                        {
                            breedID = "43e76921-191f-4de3-a831-3630a5282f33",
                            breedName = "Siberian Husky",
                            speciesID = "b1e425e4-7322-4870-9305-f4f6ca6f07a7"
                        },
                        new
                        {
                            breedID = "3eab68c4-360c-4e09-be8b-26f8abd3646e",
                            breedName = "Chihuahua",
                            speciesID = "b1e425e4-7322-4870-9305-f4f6ca6f07a7"
                        },
                        new
                        {
                            breedID = "8d2a4d76-940c-4b7d-a6e8-ed2ff06a4ca6",
                            breedName = "Great Dane",
                            speciesID = "b1e425e4-7322-4870-9305-f4f6ca6f07a7"
                        },
                        new
                        {
                            breedID = "18356a29-2a91-42f7-ade4-0b263f0ead20",
                            breedName = "Corgi",
                            speciesID = "b1e425e4-7322-4870-9305-f4f6ca6f07a7"
                        },
                        new
                        {
                            breedID = "608396e8-3803-4a61-9d99-74558b2823db",
                            breedName = "Shetland Sheepdog",
                            speciesID = "b1e425e4-7322-4870-9305-f4f6ca6f07a7"
                        },
                        new
                        {
                            breedID = "0afcb15b-98cf-454e-8090-6d4e7ebe2054",
                            breedName = "Doberman Pinscher",
                            speciesID = "b1e425e4-7322-4870-9305-f4f6ca6f07a7"
                        },
                        new
                        {
                            breedID = "546d6f12-626b-4d22-bcdc-b6556d23e513",
                            breedName = "Basset Hound",
                            speciesID = "b1e425e4-7322-4870-9305-f4f6ca6f07a7"
                        },
                        new
                        {
                            breedID = "470979ff-6a50-4a8b-8d0c-7429f75edabb",
                            breedName = "Bernese Mountain Dog",
                            speciesID = "b1e425e4-7322-4870-9305-f4f6ca6f07a7"
                        },
                        new
                        {
                            breedID = "937aa81f-9f4f-49ba-a510-9664f6f77624",
                            breedName = "Maltese",
                            speciesID = "b1e425e4-7322-4870-9305-f4f6ca6f07a7"
                        },
                        new
                        {
                            breedID = "508578b5-1d7c-4df9-9bcf-4ea8dd993950",
                            breedName = "Pug",
                            speciesID = "b1e425e4-7322-4870-9305-f4f6ca6f07a7"
                        },
                        new
                        {
                            breedID = "1785ed88-83b2-48d9-a6f3-c518afdbbc13",
                            breedName = "Dalmatian",
                            speciesID = "b1e425e4-7322-4870-9305-f4f6ca6f07a7"
                        },
                        new
                        {
                            breedID = "abdf316b-dc78-4193-a6ab-eea3cc816a3a",
                            breedName = "Persian",
                            speciesID = "662d1e2f-8e0f-4e98-ba64-f1bbf7207d0b"
                        },
                        new
                        {
                            breedID = "933af902-0b9e-4e82-b26d-6bc222be9b2d",
                            breedName = "Siamese",
                            speciesID = "662d1e2f-8e0f-4e98-ba64-f1bbf7207d0b"
                        },
                        new
                        {
                            breedID = "4e7182c0-bc20-48ac-8250-2fe6bd5be15b",
                            breedName = "Maine Coon",
                            speciesID = "662d1e2f-8e0f-4e98-ba64-f1bbf7207d0b"
                        },
                        new
                        {
                            breedID = "c9900f7f-82bb-4d4a-b4e0-1c1efb6b21f7",
                            breedName = "Ragdoll",
                            speciesID = "662d1e2f-8e0f-4e98-ba64-f1bbf7207d0b"
                        },
                        new
                        {
                            breedID = "aab887b9-6de2-481a-9d9f-344436dbc8b8",
                            breedName = "Bengal",
                            speciesID = "662d1e2f-8e0f-4e98-ba64-f1bbf7207d0b"
                        },
                        new
                        {
                            breedID = "3d7929c1-ac4e-4132-9b32-6ed9516d2ecb",
                            breedName = "Sphynx",
                            speciesID = "662d1e2f-8e0f-4e98-ba64-f1bbf7207d0b"
                        },
                        new
                        {
                            breedID = "22bcc463-c718-4368-9c48-d090bac73ee2",
                            breedName = "Scottish Fold",
                            speciesID = "662d1e2f-8e0f-4e98-ba64-f1bbf7207d0b"
                        },
                        new
                        {
                            breedID = "a8f18cef-bd34-481c-8c35-79e9a97270e4",
                            breedName = "British Shorthair",
                            speciesID = "662d1e2f-8e0f-4e98-ba64-f1bbf7207d0b"
                        },
                        new
                        {
                            breedID = "700bc9ff-87e2-4699-af63-c9488905f0bd",
                            breedName = "Abyssinian",
                            speciesID = "662d1e2f-8e0f-4e98-ba64-f1bbf7207d0b"
                        },
                        new
                        {
                            breedID = "548599e2-6e9d-4ec3-ae52-fcdc5a944de3",
                            breedName = "Russian Blue",
                            speciesID = "662d1e2f-8e0f-4e98-ba64-f1bbf7207d0b"
                        },
                        new
                        {
                            breedID = "4babc329-3f1a-4cfd-86b7-354ee2b66520",
                            breedName = "Burmese",
                            speciesID = "662d1e2f-8e0f-4e98-ba64-f1bbf7207d0b"
                        },
                        new
                        {
                            breedID = "d0030ff9-c8ea-4b69-9193-42106b430bb9",
                            breedName = "Norwegian Forest",
                            speciesID = "662d1e2f-8e0f-4e98-ba64-f1bbf7207d0b"
                        },
                        new
                        {
                            breedID = "aabf8f92-e090-4712-8f55-86403fa0e1a1",
                            breedName = "Egyptian Mau",
                            speciesID = "662d1e2f-8e0f-4e98-ba64-f1bbf7207d0b"
                        },
                        new
                        {
                            breedID = "d535d055-0462-474e-b050-abb3b54aa9fa",
                            breedName = "Devon Rex",
                            speciesID = "662d1e2f-8e0f-4e98-ba64-f1bbf7207d0b"
                        },
                        new
                        {
                            breedID = "b7452c2b-3d6b-4892-a0be-63410b9d6853",
                            breedName = "Balinese",
                            speciesID = "662d1e2f-8e0f-4e98-ba64-f1bbf7207d0b"
                        },
                        new
                        {
                            breedID = "f36bf57f-cabc-4692-9365-f2787e1f7f89",
                            breedName = "Oriental Shorthair",
                            speciesID = "662d1e2f-8e0f-4e98-ba64-f1bbf7207d0b"
                        },
                        new
                        {
                            breedID = "3316f376-b297-4ed9-90b9-5406cb705224",
                            breedName = "Cornish Rex",
                            speciesID = "662d1e2f-8e0f-4e98-ba64-f1bbf7207d0b"
                        },
                        new
                        {
                            breedID = "af3a29d1-674b-4b04-bdb5-dc7ace11f2a9",
                            breedName = "Turkish Angora",
                            speciesID = "662d1e2f-8e0f-4e98-ba64-f1bbf7207d0b"
                        },
                        new
                        {
                            breedID = "cce67749-9a2c-491a-b3c9-5432a318c05e",
                            breedName = "Himalayan",
                            speciesID = "662d1e2f-8e0f-4e98-ba64-f1bbf7207d0b"
                        },
                        new
                        {
                            breedID = "3c2b1d81-3075-4ee8-bfd3-9e7c30c241d5",
                            breedName = "Exotic Shorthair",
                            speciesID = "662d1e2f-8e0f-4e98-ba64-f1bbf7207d0b"
                        });
                });

            modelBuilder.Entity("PetCareAndAdoption.Data.Posts", b =>
                {
                    b.Property<string>("postID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("breed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("destLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isAdopt")
                        .HasColumnType("bit");

                    b.Property<bool>("isDone")
                        .HasColumnType("bit");

                    b.Property<bool>("isVaccinated")
                        .HasColumnType("bit");

                    b.Property<string>("latLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nameLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("petName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sex")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("species")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("targetFee")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("weight")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("postID");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("PetCareAndAdoption.Data.Species", b =>
                {
                    b.Property<string>("speciesID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("speciesName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("speciesID");

                    b.ToTable("Species");

                    b.HasData(
                        new
                        {
                            speciesID = "662d1e2f-8e0f-4e98-ba64-f1bbf7207d0b",
                            speciesName = "Cat"
                        },
                        new
                        {
                            speciesID = "b1e425e4-7322-4870-9305-f4f6ca6f07a7",
                            speciesName = "Dog"
                        },
                        new
                        {
                            speciesID = "956c7355-889a-4523-bae6-81d742483817",
                            speciesName = "Others"
                        });
                });

            modelBuilder.Entity("PetCareAndAdoption.Data.UserInfo", b =>
                {
                    b.Property<string>("userID")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("userID");

                    b.ToTable("UserInfo");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("PetCareAndAdoption.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("PetCareAndAdoption.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PetCareAndAdoption.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("PetCareAndAdoption.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PetCareAndAdoption.Data.Breeds", b =>
                {
                    b.HasOne("PetCareAndAdoption.Data.Species", "Species")
                        .WithMany("Breeds")
                        .HasForeignKey("speciesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Species");
                });

            modelBuilder.Entity("PetCareAndAdoption.Data.Species", b =>
                {
                    b.Navigation("Breeds");
                });
#pragma warning restore 612, 618
        }
    }
}
